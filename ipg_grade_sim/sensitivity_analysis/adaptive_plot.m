function adaptive_plot(subtbl,param_offsets)
%CREATEFIGURE(X1, YMatrix1, YMatrix2, YMatrix3)
%  X1:  vector of plot x data
%  YMATRIX1:  matrix of plot y data
%  YMATRIX2:  matrix of plot y data
%  YMATRIX3:  matrix of plot y data
time = subtbl.time;
acceleration=[subtbl.a_modeled_w_drr,subtbl.a_rls,subtbl.a_estimate,subtbl.a_true];
a_decel  = [subtbl.a_modeled_w_drr-subtbl.a_estimate,...
    subtbl.a_rls-subtbl.a_estimate,...
    subtbl.PwrL_Brake./(subtbl.mass_eff-param_offsets.trailer_mass)./subtbl.v];
P_AD_mean_true = cumtrapz(subtbl.time,subtbl.PwrL_Brake)/range(subtbl.time);
a_decel_hat = subtbl.a_rls-subtbl.a_estimate;
a_decel_hat(~subtbl.decel_on)=0;
P_AD_mean_est=cumtrapz(subtbl.time,a_decel_hat.*subtbl.mass_eff.*subtbl.v_noise)/range(subtbl.time);
a_decel_hat_ref = subtbl.a_modeled_w_drr-subtbl.a_estimate;
a_decel_hat_ref(~subtbl.decel_on)=0;
P_AD_mean_est_ref=cumtrapz(subtbl.time,a_decel_hat_ref.*subtbl.mass_eff.*subtbl.v_noise)/range(subtbl.time);
p_ad = [P_AD_mean_est_ref,P_AD_mean_est,P_AD_mean_true];
%  Auto-generated by MATLAB on 06-Feb-2024 13:26:48

% Create figure
figure1 = figure(10);
clf

% Create subplot
subplot1 = subplot(3,1,1,'Parent',figure1);
hold(subplot1,'on');

% Create multiple line objects using matrix input to plot
plot1 = plot(time,acceleration,'Parent',subplot1);
set(plot1(1),'DisplayName','Model');
set(plot1(2),'DisplayName','Model Adaptive');
set(plot1(3),'DisplayName','Measured');
set(plot1(4),'DisplayName','True','Color',[0 0 0]);
subtitle('$\mathbf{\hat{a}}$','interpreter','latex')
hold(subplot1,'off');
% Create legend
legend1 = legend(subplot1,'show');
set(legend1,...
    'Position',[0.18918918490193 0.953360216140607 0.666666657752819 0.0428571418637321],...
    'Orientation','horizontal', ...
    'AutoUpdate','off');

% Create xline
xline([0;subtbl.time(find(diff(subtbl.brake_pressure>0)~=0))])


% Create ylabel
ylabel('Acceleration [m/s^2]');

% Create xlabel
xlabel('Time [s]');

% Uncomment the following line to preserve the X-limits of the axes
% xlim(subplot1,[61.4497025419146 154.934829637642]);
% Uncomment the following line to preserve the Y-limits of the axes
% ylim(subplot1,[-1 0.517372116573133]);


% Create subplot
subplot2 = subplot(3,1,2,'Parent',figure1);
hold(subplot2,'on');
subtitle('$\mathbf{\hat{a}_{decel}}$','interpreter','latex')

% Create multiple line objects using matrix input to plot
plot2 = plot(time,a_decel,'Parent',subplot2);
set(plot2(1),'DisplayName','Model Brakeless');
set(plot2(2),'DisplayName','Corrected Brakeless');
set(plot2(3),'DisplayName','True','Color',[0 0 0]);

% Create xline
xline([0;subtbl.time(find(diff(subtbl.brake_pressure>0)~=0))])

% Create ylabel
ylabel('Acceleration [m/s^2]');

% Create xlabel
xlabel('Time [s]');

% Uncomment the following line to preserve the X-limits of the axes
% xlim(subplot2,[61.4497025419146 154.934829637642]);
box(subplot2,'on');
hold(subplot2,'off');
% Create subplot
subplot3 = subplot(3,1,3,'Parent',figure1);
hold(subplot3,'on');
subtitle('$\mathbf{\hat{P}_{AD}}$','interpreter','latex')
% Create multiple line objects using matrix input to plot
plot3 = plot(time,p_ad,'Parent',subplot3);
set(plot3(1),'DisplayName','Model Brakeless');
set(plot3(2),'DisplayName','Corrected Brakeless');
set(plot3(3),'DisplayName','True','Color',[0 0 0]);

% Create xline
xline([0;subtbl.time(find(diff(subtbl.brake_pressure>0)~=0))])

% Create ylabel
ylabel('Mean Power [kW]');

% Create xlabel
xlabel('Time [s]');

% Uncomment the following line to preserve the X-limits of the axes
% xlim(subplot3,[61.4497025419146 154.934829637642]);
% Uncomment the following line to preserve the Y-limits of the axes
% ylim(subplot3,[-0.0259921758284604 22.5519622343465]);
hold(subplot3,'off');

linkaxes([subplot1,subplot2,subplot3],'x')
xlim([65 150])